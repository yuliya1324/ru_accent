Metadata-Version: 2.4
Name: ru_accent_poet
Version: 0.1.6
Summary: A package for putting stress marks in Russian poetic texts
Home-page: https://github.com/yuliya1324/ru_accent
Author: Julia Korotkova
Author-email: koylenka15@gmail.com
Maintainer: Danslav Slavenskoj
Project-URL: Changelog (EN), https://github.com/yuliya1324/ru_accent/blob/master/CHANGELOG.en.md
Project-URL: Changelog (RU), https://github.com/yuliya1324/ru_accent/blob/master/CHANGELOG.ru.md
Project-URL: Workflow (EN), https://github.com/yuliya1324/ru_accent/blob/master/WORKFLOW.en.md
Project-URL: Workflow (RU), https://github.com/yuliya1324/ru_accent/blob/master/WORKFLOW.ru.md
Keywords: russian,accent,stress,poetry,nlp,linguistics
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Natural Language :: Russian
Classifier: Topic :: Text Processing :: Linguistic
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: requests>=2.21.0
Requires-Dist: russtress>=0.1.4
Requires-Dist: tensorflow>=2.15.0
Requires-Dist: numpy>=1.25.0
Requires-Dist: scipy>=1.11.0
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: keywords
Dynamic: license-file
Dynamic: maintainer
Dynamic: project-url
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# ru_accent_poet

This is a tool for putting stress marks in Russian poetic texts.

## Updated for TensorFlow/Keras Compatibility (v0.1.6)

This package has been updated to work with the latest versions of TensorFlow and Keras. The package now includes:

- Compatibility with TensorFlow 2.15+ and Keras 3.x
- Improved error handling and warning suppression
- Better type handling for modern Python versions
- Comprehensive test suite

### Installation
```
pip install ru-accent-poet
```

#### Dependencies
- tensorflow >= 2.15.0
- numpy >= 1.25.0
- scipy >= 1.11.0
- requests >= 2.21.0
- russtress >= 0.1.4

### Usage example

To put stress marks in text:
```python
>>> from ru_accent_poet import accent_line
>>> accent_line('Это инструмент для разметки ударений')
Э'то инструме'нт для разме'тки ударе'ний
```

To put stress marks in multiple files:
```python
>>> import ru_accent_poet
>>> ru_accent_poet.write_file(['my_file_1.txt', 'my_file_2.txt'])
```

This will create new files called "my_file_1.accented.txt" and "my_file_2.accented.txt" with the same text where stress marks are added.

### Different Accentuation Methods

The package offers three accentuation approaches:

1. **Combined approach** (default) - Uses both dictionary and neural network:
   ```python
   from ru_accent_poet import accent_line
   accent_line("Мой дядя самых честных правил")
   ```

2. **Rules-based approach** - Uses only the dictionary:
   ```python
   from ru_accent_poet.rules import accent_line_rules
   accent_line_rules("Мой дядя самых честных правил")
   ```

3. **Neural approach** - Uses only the neural network:
   ```python
   from ru_accent_poet.neuro import accent_neuro
   accent_neuro(["file.txt"])  # Creates file.nacc.txt
   ```

### Testing

A comprehensive test suite is included:

```bash
# Run all tests using pytest
python run_tests.py

# Run tests using unittest
python run_tests.py --unittest

# Run specific test files
pytest tests/test_accent.py -v
```

For more information, see the documentation in the `tests` directory.

### Documentation

Additional documentation is available in the repository:
- `WORKFLOW.en.md`/`WORKFLOW.ru.md` - Detailed explanation of the accentuation process
- `CHANGELOG.en.md`/`CHANGELOG.ru.md` - Version history and changes
- `tests/README.md` - Information about the test suite
